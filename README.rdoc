= Google Cloud Logging plugin for {fluentd}[http://github.com/fluent/fluentd]

fluent-plugin-google-cloud gem includes two plugins:
1. A {filter plugin for fluentd}[http://docs.fluentd.org/articles/filter-plugin-overview]
that embeds insertIds into log entries to guarantee order and uniqueness.
2. An {output plugin for fluentd}[http://docs.fluentd.org/articles/output-plugin-overview]
which sends logs to the {Stackdriver Logging API}[https://cloud.google.com/logging/docs/api/].

This is an official Google Ruby gem.

{<img src="https://badge.fury.io/rb/fluent-plugin-google-cloud.svg" alt="Gem Version" />}[http://badge.fury.io/rb/fluent-plugin-google-cloud]
{<img src="https://secure.travis-ci.org/GoogleCloudPlatform/fluent-plugin-google-cloud.png" alt="Build Status" />}[https://travis-ci.org/GoogleCloudPlatform/fluent-plugin-google-cloud]

== Installation

This gem is hosted at {RubyGems.org}[https://rubygems.org/gems/fluent-plugin-google-cloud]
and can be installed using:

    $ gem install fluent-plugin-google-cloud

Installing {google-fluentd}[https://cloud.google.com/logging/docs/agent/]
will also install and configure the gem.

== Configuration

To embed insertIds into log entries, specify <code>@type add_insert_ids</code>
in a {filter clause}[https://docs.fluentd.org/v1.0/articles/config-file#(3)-%E2%80%9Cfilter%E2%80%9D:-event-processing-pipeline]
of your Fluentd configuration file, for example:

    <filter **>
      @type add_insert_ids
      insert_id_key my_insert_id_field_name # Optional.
    </filter>

insert_id_key can be used to customize the insertId field name.

To send logs to Google Cloud Logging, specify <code>@type google_cloud</code>
in a {match clause}[http://docs.fluentd.org/articles/config-file#2-ldquomatchrdquo-tell-fluentd-what-to-do]
of your Fluentd configuration file, for example:

    <match **>
      @type google_cloud
    </match>

See detailed instructions on how to configure this output plugin {here}[https://cloud.google.com/logging/docs/agent/configuration#cloud-fluentd-config].
The plugin uses
{Google Application Default Credentials}[https://developers.google.com/identity/protocols/application-default-credentials]
for authorization - for additional information see
{here}[https://cloud.google.com/logging/docs/agent/authorization].


== Copyright

Copyright:: Copyright 2014 Google Inc. All rights reserved.
License::   Apache License, Version 2.0


-------------------------------------

https://cloud.google.com/logging/docs/agent/authorization#copy-private-key

https://github.com/GoogleCloudPlatform/fluent-plugin-google-cloud

Setup:

1) Create a service_accoutn JSON key on a GCP project, Download it and copy into `pwd`/certs/application_default_credentials.json

start docker
```
docker run -ti -v `pwd`/certs/:/etc/google/auth/ debian /bin/bash
```

2) in docker install fluentd 
```
 apt-get update
 apt-get install -y curl sudo gnupg make gcc ruby-full vim procps

  curl -L https://toolbelt.treasuredata.com/sh/install-debian-stretch-td-agent3.sh | sh

```
3) Install fluent-plugin-google-cloud

```
/opt/td-agent/embedded/bin/gem install fluent-plugin-google-cloud
```

4) copy provided

 out_google_cloud.rb `pwd`/certs

 then in the container

cp /certs/out_google_cloud.rb  --> /opt/td-agent/embedded/lib/ruby/gems/2.4.0/gems/fluent-plugin-google-cloud-0.7.3/lib/fluent/plugin/out_google_cloud.rb

5) Edit /etc/td-agent/td-agent.conf

Add
```
<match gcp_resource.**>
  @type google_cloud
  use_metadata_service false
  monitored_resource generic_node
  project_id  fabled-ray-104117
  location us-central1-a
  namespace default
  node_id 10.10.10.1
</match>

<match gcp_task.**>
  @type google_cloud
  use_metadata_service false
  monitored_resource generic_task
  project_id  fabled-ray-104117
  location us-central1-a
  namespace default
  job  random_job
  task_id random_task
</match>
```

6) restart fluentd 
```
service td-agent restart
```

7) Send sample traffic to http listner

```
curl -X POST -d 'json={"foo":"bar"}' http://localhost:8888/gcp_resource.log
curl -X POST -d 'json={"foo":"bar"}' http://localhost:8888/gcp_task.log
```

8) tail log file

```
tail -f /var/log/td-agent/td-agent.log
```


