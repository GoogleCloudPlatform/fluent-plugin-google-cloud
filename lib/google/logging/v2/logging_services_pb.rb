# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/logging/v2/logging.proto for package 'google.logging.v2'
# Original file comments:
# Copyright 2016 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/logging/v2/logging_pb'

module Google
  module Logging
    module V2
      module LoggingServiceV2
        # Service for ingesting and querying logs.
        class Service

          include GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'google.logging.v2.LoggingServiceV2'

          # Deletes all the log entries in a log.
          # The log reappears if it receives new entries.
          rpc :DeleteLog, DeleteLogRequest, Google::Protobuf::Empty
          # Writes log entries to Stackdriver Logging.  All log entries are
          # written by this method.
          rpc :WriteLogEntries, WriteLogEntriesRequest, WriteLogEntriesResponse
          # Lists log entries.  Use this method to retrieve log entries from Cloud
          # Logging.  For ways to export log entries, see
          # [Exporting Logs](/logging/docs/export).
          rpc :ListLogEntries, ListLogEntriesRequest, ListLogEntriesResponse
          # Lists the monitored resource descriptors used by Stackdriver Logging.
          rpc :ListMonitoredResourceDescriptors, ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse
        end

        Stub = Service.rpc_stub_class
      end
    end
  end
end
