# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/logging/v1/logging.proto for package 'google.logging.v1'

require 'grpc'
require 'google/logging/v1/logging'

module Google
  module Logging
    module V1
      module LoggingService
        # API Overview
        # ------------
        #
        # The Logging service provides methods to manage (create/update/delete) logs,
        # ingest and retrieve log entries within a log, and manage log sinks.
        #
        # Data Model
        # ----------
        #
        # The Logging service exposes the following resources:
        #
        # * Projects, named `/projects/`
        # These are Google Developers Console projects.
        #
        # * Project sinks, named as `/projects/*/sinks/*`
        # These are additional destinations for the log entries written to a log.
        # Log entries are written to each of the sinks in addition to the default
        # built-in storage. Log entries are written to all of the matching sinks.
        # Adding or removing a sink only affects log entries written after
        # the operation on the sink completes.
        #
        # * Logs, named `/projects/*/logs/*`
        # These are log resources associated with a given project. Logs whose name
        # begins with a valid DNS name followed by a "/" are reserved for services that
        # own the DNS name. For example, all logs that begin with
        # `compute.googleapis.com/` are reserved for Google Compute Engine.
        # Log names must be less than 512 characters long and can include the following
        # characters:
        #   upper- and lower-case alphanumeric characters: [A-Za-z0-9]
        #   punctuation characters: slash, underscore, hyphen, period [/_-.]
        #
        # Note that when assembling the full log resource name, slashes in the trailing
        # part of the name must be URL-encoded. For example, the full resource name for
        # the log `compute.googleapis.com/syslog` in the `myproject` project would be
        # `/projects/myproject/logs/compute.googleapis.com%2Fsyslog`.
        #
        # * Log entries, named as `/projects/*/logs/*/entries`
        # These are individual log entries inside a log. NOTE: due to the potentially
        # high traffic load for a log, the service does not assign resource names to
        # individual log entries. The only way to retrieve log entries is to search
        # through a log based on timestamp or other properties. All log entries in a
        # log must have the same payload type.
        #
        # * Log sinks, named as `/projects/*/logs/*/sinks/*`
        # These are additional destinations for the log entries written to a log.
        # Log entries are written to each of the sinks in addition to the default
        # built-in storage. Log entries are written to all of the matching sinks.
        # Adding or removing a sink only affects log entries
        # written after the operation on the sink completes.
        #
        # * Log services, named `/projects/*/logServices`
        # These are cloud services that have ingested log entries for individual
        # projects. Log entries may optionally be associated with a service at the
        # time of ingestion. Log entries associated with a Google Cloud Platform
        # service are indexed by labels specific to that service (see Service indexes
        # below).
        #
        # * Log service sinks, named as `/projects/*/logServices/*/sinks/*`
        # These are additional destinations for the log entries that are associated
        # with a service. Log entries are written to each of the enabled sinks in
        # addition to the default built-in storage. Log entries are written to all
        # of the matching sinks. Adding or removing a sink only affects log entries
        # written after the operation on the sink completes.
        #
        # * Log service indexes, named `/projects/*/logServices/*/indexes`
        # These are descriptions of how the logging service indexes log entries
        # associated with Google Cloud Platform services. Each index is a hierarchy of
        # label values, which provides a guide as to how the log entries may be
        # effectively filtered during retrieval. The corresponding label keys are
        # associated with the log service resource. For example the App Engine service
        # index is comprised of module and version identifiers, and one value might be
        # "/myModule/myVersion/". See the documentation for
        # [LogEntryMetadata.labels][google.logging.v1.LogEntryMetadata.labels] for
        # details about relevant label keys for existing services.
        #
        # * Log metrics, named as `/projects/*/metrics/*`
        # These are metric filters associated with a given project. A metric filter
        # counts log entries that match a user-specified filter, and exports the count
        # as a monitoring metric.
        #
        # Service for ingesting and querying logs.
        class Service

          include GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'google.logging.v1.LoggingService'

          # Log resources
          # -------------
          #
          # There is no CreateLog operation, because calling WriteLogEntries
          # on a nonexistent log automatically creates the log.
          #
          # Lists the logs in the project.
          # Only logs that have entries are listed.
          #
          # (-- Requires https://www.googleapis.com/auth/logging.read scope. --)
          rpc :ListLogs, ListLogsRequest, ListLogsResponse
          # Deletes a log and all its log entries.
          # The log will reappear if it receives new entries.
          #
          # (-- Requires https://www.googleapis.com/auth/logging.admin scope. --)
          rpc :DeleteLog, DeleteLogRequest, Google::Protobuf::Empty
          # Log entry resources
          # -------------------
          #
          # Writes log entries to Stackdriver Logging. Each entry consists of a
          # `LogEntry` object.  You must fill in the required fields of the
          # object.  You can supply a map, `commonLabels`, that holds default
          # (key, value) data for the `entries[].metadata.labels` map in each
          # entry, saving you the trouble of creating identical copies for
          # each entry.
          #
          # (-- Requires https://www.googleapis.com/auth/logging.write scope. --)
          #
          # (-- Google internal users may write batches of entries for multiple
          # projects by setting the LogEntryMetadata.project_number for each entry and
          # using '-' to identify the project in WriteLogEntriesRequest.log_name (for
          # example, /projects/-/logs/log_name/entries:write). --)
          rpc :WriteLogEntries, WriteLogEntriesRequest, WriteLogEntriesResponse
          # Log service resources
          # ---------------------
          #
          # Lists the log services that have log entries in this project.
          #
          # (-- Requires https://www.googleapis.com/auth/logging.read scope. --)
          rpc :ListLogServices, ListLogServicesRequest, ListLogServicesResponse
          # Lists the current index values for a log service.
          #
          # (-- Requires https://www.googleapis.com/auth/logging.read scope. --)
          rpc :ListLogServiceIndexes, ListLogServiceIndexesRequest, ListLogServiceIndexesResponse
        end

        Stub = Service.rpc_stub_class
      end
    end
  end
end
